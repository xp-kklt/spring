<!DOCTYPE web-app PUBLIC
		"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
		"http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<display-name>Archetype Created Web Application</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/web.xml</param-value>
	</context-param>

	<servlet>
		<servlet-name>springmvc01</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc01</servlet-name>

		<!--
		方式一：带后缀，比如*.action,*.do
		方式二：/，不会拦截.jsp,但是会拦截.html等静态资源（静态资源：除了servlet和jsp的js、css、png等）
				为什么会拦截静态资源？
				因为tomcat容器中有一个web.xml(父），我们的项目也有一个web.xml（子),
				是一个继承关系，此时我们自己的web.xml中也配置了一个/,覆写了父web.xml的
				配置
				为什么不拦截.jsp呢？
				因为父web.xml中有一个JspServlet，这个servlet拦截.jsp文件，而我们并没有覆写
				这个配置，所以springmvc此时不拦截jsp，jsp的处理交给了tomcat
		方式三：/*，拦截所有的请求，包括jsp
		-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>
